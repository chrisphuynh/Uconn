import random
import numpy as np
from scipy.stats import norm, t
import matplotlib.pyplot as plt
plt.rcParams.update({'font.size': 18})
plt.rcParams['lines.linewidth'] = 3
import pandas as pd

dataA = pd.read_csv('IphoneX.csv')
zaccA = dataA['z Acceleration (m/s^2)'].values
dataB = pd.read_csv('S10.csv')
zaccB = dataB['z Acceleration (m/s^2)'].values

zA = random.choices(zaccA, k=30)  #Randomly samples 30 values from population data
zB = random.choices(zaccB, k=30)
#print('The number of entries in sample group A: %1.0f' %(len(zA)))
#print('The number of entries in sample group B: %1.0f' %(len(zB)))
#print(zA)
#print(zB)

totalavgA=np.mean(zaccA)  #Mean of the population
totalavgB=np.mean(zaccB)
#print('Mean of population A: %1.4f' %(totalavgA))
#print('Mean of population B: %1.4f' %(totalavgB))

totalstdA=np.std(zaccA)  #Standard deviation of population
totalstdB=np.std(zaccB)
print('Standard Devi. of population A: ', totalstdA)
print('Standard Devi. of population B: ', totalstdB)

avgzA=np.mean(zA)  #Mean of sample group
avgzB=np.mean(zB)
#print('Mean of sample group A: %1.4f' %(avgzA))
#print('Mean of sample group B: %1.4f' %(avgzB))

stdzA=np.sqrt((np.sum((zA - avgzA)**2))/29)  #Standard deviation of a small sample group
stdzA=np.sqrt((np.sum((zB - avgzB)**2))/29)
#print('stand dev. A ',stdzA)
#print('stand dev. B ', stdzB)

tA=(abs(totalavgA-avgzA)*np.sqrt(30))/totalstdA  #Calculates the t-stat for a one sample t-test (Population)
tB=(abs(totalavgB-avgzB)*np.sqrt(30))/totalstdB

dfA = len(zaccA)-1  #Calculates degrees of freedom
dfB = len(zaccB)-1
#print('Degrees of freedom for data set A: %1.0f'%(dfA))
#print('Degrees of freedom for data set B: %1.0f'%(dfB))

a = (30+30) / (30*30)
b = ((30-1)*(stdzA**2) + (30-1)*(stdzB**2)) / (60-2)
tstat = abs(avgzA - avgzB) / np.sqrt(a*b)  #Calculate the t-stat for a two sample t-test (Sample group)

t1=(abs(avgzA-9.80665)*np.sqrt(30))/(stdzA)  #Calculates the t-stat of a one sample t-test (Sample group)
t2=(abs(avgzB-9.80665)*np.sqrt(30))/(stdzB)

print('Iphone = A')
print('Samsung Galaxy S10 = B')
print('')
print('T-stat of population A: %1.4f'%(tA))
print('T-value for population A: %1.8f'%(t.interval(0.95, dfA)[1]))
print('T-stat of sample group A: %1.4f' %(t1))
print('T-value for sample group A: %1.4f' %(t.interval(0.95, 29)[1]))
print('')
print('T-stat of population B: %1.4f'%(tB))
print('T-value for population B: %1.8f'%(t.interval(0.95, dfB)[1]))
print('T-stat of sample group B: %1.4f' %(t2))
print('T-value for sample group B: %1.4f' %(t.interval(0.95, 29)[1]))
print('')
print('The t-stat for two sample test: %1.8f'%tstat)
print('The t-value for two sample test: %1.8f'%(t.interval(0.95, 58)[1]))

fig1 = plt.figure()
plt.hist(zaccA,30)
plt.ylabel('number of measurements')
plt.xlabel('acceleration (m/s^2)');
plt.title('Iphone X')

fig2 = plt.figure()
plt.hist(zaccB,30)
plt.ylabel('number of measurements')
plt.xlabel('acceleration (m/s^2)');
plt.title('S10')

plt.tight_layout(pad=2);
